{"version":3,"sources":["logo.svg","Global.js","Issue.js","Fill.js","VODA.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Global","selection","Issue","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","issueBallot","bind","assertThisInitialized","refs","React","createRef","state","selections","e","preventDefault","axios","get","then","response","console","log","event","ref","push","value","post","data","list","react_default","a","createElement","className","type","onClick","test","id","method","placeholder","react_router_dom","to","style","textDecoration","Component","Fill","createMarkup","vote","checkboxes","checked","voter_selections","c","length","cb","l","s","idx","val","toString","__html","dangerouslySetInnerHTML","VODA","react_router","exact","path","component","App","src_VODA","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16762f34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\n\n    selection: []\n\n};\n\n\n\nexport function displayBallot(s, idx) {\n\n\n\n\n\n\n\n      var choice = '<li><input type=\"checkbox\" checked={this.state.checked[' + idx + ']}' + 'onClick={this.handleClick.bind(this)} value=\"' + s + '\">' + s + '</input></li>'\n\n\n\n\n\n\n\n\n\n    return choice\n\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'\nimport list  from './Global'\n\n\nexport default class Issue extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.issueBallot = this.issueBallot.bind(this);\n        this.refs = React.createRef();\n        this.state = { selections: [], }\n\n\n    }\n\n\n    test(e) {\n        e.preventDefault();\n        axios.get('/voda/ballots').then(function(response) {\n\n\n                    console.log(response);\n\n\n        });\n    }\n\n\n\n    issueBallot(event) {\n\n\n\n         for (var ref in this.refs) {\n            this.state.selections.push(this.refs[ref].value);\n\n         }\n\n         console.log(this.state.selections);\n\n         axios.post('/voda/issue-ballot', this.state.selections).then(function(response) {\n\n\n            console.log(response);\n            console.log(response.data)\n\n\n\n\n        });\n\n        list.value = this.state.selections\n\n\n    }\n\n\n\n   render() {\n    return (\n       \n\n\n\t    <div className=\"voda-ballot\">\n\n\n\n\t    <button type=\"button\" onClick={this.test}>TEST</button>\n\n            <h1>VODA</h1>\n\n                <ul>\n\n\n                 <form id=\"ballot\"  method=\"post\">\n\n                    <li> <input type=\"text\" id=\"input-1\" ref=\"ref1\" placeholder=\"selection\"  /></li>\n                    <li> <input type=\"text\" id=\"input-2\" ref=\"ref2\" placeholder=\"selection\" /></li>\n                    <li> <input type=\"text\" id=\"input-2\" ref=\"ref3\" placeholder=\"selection\" /></li>\n                    <li> <input type=\"text\" id=\"input-2\" ref=\"ref4\" placeholder=\"selection\" /></li>\n                    <li> <input type=\"text\" id=\"input-2\" ref=\"ref5\" placeholder=\"selection\" /></li>\n\n                     <Link to='/fill-ballot' style={{ textDecoration: \"none\" }} onClick={this.issueBallot.bind(this)}>ISSUE</Link>\n\n                    </form>\n\n                </ul>\n\n\n\n\n\n\n\n            </div>\n\n\n\n\n\n\n            );\n\n\n\n    }\n\n\n\n\n}\n\n\n\n\n\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Issue from './Issue'\nimport { Link } from 'react-router-dom'\nimport list, {displayBallot} from './Global'\n\n\n\n\nexport default class Fill extends Component {\n\n\n\n\n     constructor(props) {\n\n        super(props)\n        this.createMarkup = this.createMarkup.bind(this)\n        this.vote = this.vote.bind(this)\n        this.refs = React.createRef()\n        this.checkboxes = []\n        this.state = { checked: [] }\n\n//        for (var i in list.value.length) {\n//\n//            this.state.checked[i] = false\n//        }\n\n\n\n     }\n\n\n\n\n\n\n     vote() {\n\n\n\n        var voter_selections = []\n        for (var c in list.value.length) {\n           if (this.state.checked[c] == true) {\n               voter_selections.push(this.state.value)\n\n\n           }\n\n\n        }\n        console.log(voter_selections)\n\n\n        return voter_selections\n     }\n\n\n\n\n     handleClick(cb) {\n\n        if (this.checked == false) {\n\n            this.checked = true\n        }\n        else  {\n\n            this.checked = false\n        }\n\n     }\n\n\n\n\n     createMarkup(l) {\n\n\n        var ballot = []\n        var selection = \"\"\n        console.log('isaiaj')\n        var count = 0\n        for (var val in l) {\n\n            this.state.checked[val] = false\n\n            selection += displayBallot(l[val],val).toString()\n\n\n\n\n        }\n\n        console.log(selection)\n        console.log(this.state.checked.length)\n\n\n\n\n        return {__html: '' + selection};\n     }\n\n     render() {\n\n        return (\n\n\n\n\t        <div className=\"fill-voda-ballot\">\n\n\n\n\t          <h1>VODA</h1>\n\n\n                 <form>\n\n                  <ul>\n\n                    <div id=\"options\" dangerouslySetInnerHTML = { this.createMarkup(list.value) } />\n\n\n                    </ul>\n\n                   </form>\n\n                   <Link to='/vote-count' onClick={this.vote.bind(this)} style={{ textDecoration: \"none\" }}>VOTE</Link>\n\n\n\n                </div>\n\n\n\n\n\n\n        );\n\n\n\n    }\n\n\n\n\n}","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Issue from './Issue'\nimport Fill from './Fill'\n\n\nconst VODA = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Issue}/>\n      <Route path='/fill-ballot' component={Fill}/>\n      <Route path='/vote-count' component={Issue}/>\n    </Switch>\n  </main>\n)\n\nexport default VODA","import React from 'react'\nimport VODA from './VODA'\n\nconst App = () => (\n  <div>\n    <VODA />\n  </div>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n\n            <BrowserRouter>\n            <App />\n            </BrowserRouter>\n            ),\n        document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}